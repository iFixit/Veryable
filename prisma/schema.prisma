generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider            = "prisma-dbml-generator"
  output              = "../docs"
  projectName         = "Veryable"
  projectDatabaseType = "MySQL"
  projectNote         = "Database for housing metrics for QA to analyze and use for continuous improvement"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Commit {
  commit_event_id String            @id @db.VarChar(255)
  sha             String            @db.VarChar(40)
  qa_ready        Boolean?          @default(false)
  interacted      Boolean?          @default(false)
  dev_blocked     Boolean?          @default(false)
  qa_stamped      Boolean?          @default(false)
  ci_status       commit_ci_status?
  committed_at    Int
  pushed_at       Int?
  pull_request_id String?           @db.VarChar(255)
  pull_request    PullRequest?      @relation("qa__commitsToqa__pull_requests", fields: [pull_request_id], references: [pull_request_id], onDelete: Cascade, onUpdate: NoAction, map: "qa__commits_ibfk_1")

  @@unique([sha, pull_request_id])
  @@index([pull_request_id])
  @@map("qa__commits")
}

model Day {
  date               Int @id
  pull_count         Int @default(0)
  pulls_added        Int @default(0)
  pulls_interacted   Int @default(0)
  unique_pulls_added Int @default(0)

  @@map("qa__daily_metrics")
}

model PullRequest {
  pull_request_id  String             @id @db.VarChar(255)
  repo             String         @default("") @db.VarChar(100)
  pull_number      Int            @db.UnsignedInt
  state            pull_request_state
  title            String         @db.VarChar(255)
  head_ref         String         @db.Char(40)
  qa_req           Int            @default(1)
  created_at       Int?           @db.UnsignedInt
  updated_at       Int?           @db.UnsignedInt
  closed_at        Int?           @db.UnsignedInt
  merged_at        Int?           @db.UnsignedInt
  closes           Int?           @db.UnsignedInt
  author           String             @db.VarChar(40)
  agg_interacted_count Int                @default(0)
  agg_qa_ready_count   Int                @default(0)
  agg_dev_block_count  Int                @default(0)
  agg_qa_stamped_count Int                @default(0)
  qa_ready         Boolean?           @default(false)
  interacted       Boolean?           @default(false)
  dev_blocked      Boolean?           @default(false)
  qa_stamped       Boolean?           @default(false)
  commits              Commit[]           @relation("qa__commitsToqa__pull_requests")

  @@unique([repo, pull_number])
  @@map("qa__pull_requests")
}

enum pull_request_state {
  OPEN
  CLOSED
  MERGED
}

enum commit_ci_status {
  PENDING
  ERROR
  FAILURE
  SUCCESS
  EXPECTED
}
